<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chatRobot.dao.ProcedureInfoMapper">
  <resultMap id="BaseResultMap" type="com.chatRobot.model.ProcedureInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="step" jdbcType="INTEGER" property="step" />
    <result column="info" jdbcType="VARCHAR" property="info" />
    <result column="step_name" jdbcType="VARCHAR" property="procedure_name" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, role_id, step, info, procedure_name
  </sql>
  <select id="selectByExample" parameterType="com.chatRobot.model.ProcedureInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from procedure
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from procedure
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from procedure
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.chatRobot.model.ProcedureInfo">
    insert into procedure (id, role_id, step, 
      info, procedure_name)
    values (#{id,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{step,jdbcType=INTEGER}, 
      #{info,jdbcType=VARCHAR}, #{procedureName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.chatRobot.model.ProcedureInfo">
    insert into procedure
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="step != null">
        step,
      </if>
      <if test="info != null">
        info,
      </if>
      <if test="procedureName != null">
        procedure_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="step != null">
        #{step,jdbcType=INTEGER},
      </if>
      <if test="info != null">
        #{info,jdbcType=VARCHAR},
      </if>
      <if test="procedureName != null">
        #{procedureName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.chatRobot.model.ProcedureInfo">
    update procedure
    <set>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="step != null">
        step = #{step,jdbcType=INTEGER},
      </if>
      <if test="info != null">
        info = #{info,jdbcType=VARCHAR},
      </if>
      <if test="procedureName != null">
        procedure_name = #{procedureName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chatRobot.model.ProcedureInfo">
    update procedure
    set role_id = #{roleId,jdbcType=INTEGER},
      step = #{step,jdbcType=INTEGER},
      info = #{info,jdbcType=VARCHAR},
      procedure_name = #{procedureName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getRoleProcedure"   resultType="com.chatRobot.model.procedureRes">
    select role_id,step,id,step_name from pet.procedure where role_id=#{role} and pet.procedure.domain=#{domain} order by step
  </select>
  <select id="getProcedureDetail" parameterType="java.lang.Integer" resultType="com.chatRobot.model.ProcedureInfo">
    select * from pet.procedure where id=#{procedureID}
  </select>
  <select id="getPicUrl" parameterType="java.lang.Integer" resultType="java.lang.String">
    SELECT url FROM picture where procedure_id=#{procedureID};
  </select>

  <select id="getVideoUrl" parameterType="java.lang.Integer" resultType="java.lang.String">
    SELECT url FROM video where procedure_id=#{procedureID};
  </select>

  <select id="getAllDomain" parameterType="java.lang.Integer" resultType="java.lang.String">
    select distinct(pet.procedure.domain) from pet.procedure where role_id=#{role}
  </select>
</mapper>